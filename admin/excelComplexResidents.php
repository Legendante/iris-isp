<?php
include("db.inc.php");
$ComplexID = pebkac($_GET['c'], 5);
$ComplexRec = getComplexByID($ComplexID);
$ComplextTypes = getComplexTypes();
$UnitStatusses = getUnitStatusses();
$OrderStatusses = getUnitOrderStatusses();
$OrderStatusses[0] = 'None';
$Residents = getComplexResidents($ComplexID);
$ComplexOrders = getComplexUnitPackages($ComplexID);
$Speeds = getPackageSpeeds();
$Speeds[0] = '-';
$ONTs = getONTTypes();
$ONTs[0] = '-';
$Packages = getFibrePackages();
require_once('PHPExcel.php');
$FileName = 'IRIS.' . date("Ymd") . '.' . $ComplexRec['complexname'] . '.Residents.xlsx';
$styleThinBlackBorderOutline = array('borders' => array('outline' => array('style' => PHPExcel_Style_Border::BORDER_THIN, 'color' => array('argb' => 'FF000000'),),),);
$styleThickBrownBorderOutline = array('borders' => array('outline' => array('style' => PHPExcel_Style_Border::BORDER_THICK,	'color' => array('argb' => 'FF993300'),),),);
$styleThickBlackBorderOutline = array('borders' => array('outline' => array('style' => PHPExcel_Style_Border::BORDER_THICK,	'color' => array('argb' => 'FF000000'),),),);
$objPHPExcel = new PHPExcel();
$objPHPExcel->getProperties()->setCreator("IRIS");
$objPHPExcel->getProperties()->setLastModifiedBy("IRIS");
$objPHPExcel->getProperties()->setTitle($ComplexRec['complexname'] . " Residents");
$objPHPExcel->getProperties()->setSubject($ComplexRec['complexname'] . " Residents");
$objPHPExcel->getProperties()->setDescription($ComplexRec['complexname'] . " Residents List. Generated by IRIS");
$objPHPExcel->setActiveSheetIndex(0);
$objPHPActiveSheet = $objPHPExcel->getActiveSheet();
$objPHPActiveSheet->setTitle(substr($ComplexRec['complexname'] . ' Residents', 0, 30));
$objPHPActiveSheet->mergeCells('A1:I1');
$objPHPActiveSheet->getStyle('A1')->getFont()->setSize(16);
$objPHPActiveSheet->getStyle('A1')->getFont()->setBold(true);
$objPHPActiveSheet->setCellValue('A1', $ComplexRec['complexname'] . ' Residents');
$ThisRow = 2;
$objPHPActiveSheet->getStyle('A' . $ThisRow . ':I' . $ThisRow)->getFont()->setSize(10);
$objPHPActiveSheet->getStyle('A' . $ThisRow . ':I' . $ThisRow)->getFont()->setBold(true);
$objPHPActiveSheet->getStyle('A' . $ThisRow . ':I' . $ThisRow)->getFill()->setFillType(PHPExcel_Style_Fill::FILL_SOLID);
$objPHPActiveSheet->getStyle('A' . $ThisRow . ':I' . $ThisRow)->getFill()->getStartColor()->setARGB('FFCCCCCC');
$objPHPActiveSheet->getStyle('A' . $ThisRow . ':I' . $ThisRow)->getAlignment()->setVertical(PHPExcel_Style_Alignment::VERTICAL_CENTER);
$objPHPActiveSheet->getStyle('A' . $ThisRow . ':I' . $ThisRow)->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
$objPHPActiveSheet->getColumnDimension('A')->setWidth('6');
$objPHPActiveSheet->getColumnDimension('B')->setWidth('15');
$objPHPActiveSheet->getColumnDimension('C')->setWidth('15');
$objPHPActiveSheet->getColumnDimension('D')->setWidth('15');
$objPHPActiveSheet->getColumnDimension('E')->setWidth('30');
$objPHPActiveSheet->getColumnDimension('F')->setWidth('13');
$objPHPActiveSheet->getColumnDimension('G')->setWidth('13');
$objPHPActiveSheet->getColumnDimension('H')->setWidth('18');
$objPHPActiveSheet->getColumnDimension('I')->setWidth('10');
$objPHPActiveSheet->getStyle('A' . $ThisRow)->applyFromArray($styleThinBlackBorderOutline);
$objPHPActiveSheet->getStyle('B' . $ThisRow)->applyFromArray($styleThinBlackBorderOutline);
$objPHPActiveSheet->getStyle('C' . $ThisRow)->applyFromArray($styleThinBlackBorderOutline);
$objPHPActiveSheet->getStyle('D' . $ThisRow)->applyFromArray($styleThinBlackBorderOutline);
$objPHPActiveSheet->getStyle('E' . $ThisRow)->applyFromArray($styleThinBlackBorderOutline);
$objPHPActiveSheet->getStyle('F' . $ThisRow)->applyFromArray($styleThinBlackBorderOutline);
$objPHPActiveSheet->getStyle('G' . $ThisRow)->applyFromArray($styleThinBlackBorderOutline);
$objPHPActiveSheet->getStyle('H' . $ThisRow)->applyFromArray($styleThinBlackBorderOutline);
$objPHPActiveSheet->getStyle('I' . $ThisRow)->applyFromArray($styleThinBlackBorderOutline);
$objPHPActiveSheet->setCellValue('A' . $ThisRow, 'Unit #');
$objPHPActiveSheet->setCellValue('B' . $ThisRow, 'First name');
$objPHPActiveSheet->setCellValue('C' . $ThisRow, 'Last name');
$objPHPActiveSheet->setCellValue('D' . $ThisRow, 'ID Number');
$objPHPActiveSheet->setCellValue('E' . $ThisRow, 'Email');
$objPHPActiveSheet->setCellValue('F' . $ThisRow, 'Cell number');
$objPHPActiveSheet->setCellValue('G' . $ThisRow, 'Alt number');
$objPHPActiveSheet->setCellValue('H' . $ThisRow, 'Date Registered');
$objPHPActiveSheet->setCellValue('I' . $ThisRow, 'Package');
$ThisRow++;
foreach($Residents AS $UnitID => $ResRec)
{
	$objPHPActiveSheet->setCellValue('A' . $ThisRow, $ResRec['unitnumber']);
	$objPHPActiveSheet->setCellValue('B' . $ThisRow, $ResRec['customername']);
	$objPHPActiveSheet->setCellValue('C' . $ThisRow, $ResRec['customersurname']);
	$objPHPActiveSheet->getCell('D' . $ThisRow)->setValueExplicit($ResRec['idnumber'], PHPExcel_Cell_DataType::TYPE_STRING);
	$objPHPActiveSheet->setCellValue('E' . $ThisRow, $ResRec['email1']);
	$objPHPActiveSheet->getCell('F' . $ThisRow)->setValueExplicit($ResRec['cell1'], PHPExcel_Cell_DataType::TYPE_STRING);
	$objPHPActiveSheet->getCell('G' . $ThisRow)->setValueExplicit($ResRec['tel1'], PHPExcel_Cell_DataType::TYPE_STRING);
	$objPHPActiveSheet->setCellValue('H' . $ThisRow, $ResRec['dateregistered']);
	$Package = '';
	if(isset($ComplexOrders[$UnitID]))
	{
		foreach($ComplexOrders[$UnitID] AS $OrderID => $OrderRec)
		{
			$Package .= $Packages[$OrderRec['packageid']]['packagename'];
		}
	}
	$objPHPActiveSheet->setCellValue('I' . $ThisRow, $Package);
	$ThisRow++;
}
$objPHPExcel->setActiveSheetIndex(0);
// Redirect output to a client’s web browser (Excel2007)
header('Content-Type: application/vnd.openxmlformats-officedocument.spreadsheetml.sheet');
header('Content-Disposition: attachment;filename="' . $FileName . '"');
header('Cache-Control: max-age=0');
// If you're serving to IE 9, then the following may be needed
header('Cache-Control: max-age=1');
// If you're serving to IE over SSL, then the following may be needed
header ('Expires: Mon, 26 Jul 1997 05:00:00 GMT'); // Date in the past
header ('Last-Modified: '.gmdate('D, d M Y H:i:s').' GMT'); // always modified
header ('Cache-Control: cache, must-revalidate'); // HTTP/1.1
header ('Pragma: public'); // HTTP/1.0
$objWriter = PHPExcel_IOFactory::createWriter($objPHPExcel, 'Excel2007');
$objWriter->save('php://output');
$objPHPExcel->disconnectWorksheets(); // Disconnect before you unset to properly clear the memory
unset($objPHPExcel);
unset($objWriter);
?>