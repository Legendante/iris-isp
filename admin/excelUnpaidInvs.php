<?php
include("db.inc.php");
$Invs = getUnpaidInvoices();
if(count($Invs) > 0)
{
	$CustomerIDList = array();
	$NonVatTotal = 0;
	$VatTotal = 0;
	$UnitArr = array();
	$ComplexIDArr = array();
	foreach($Invs AS $InvoiceID => $Inv)
	{
		$CustomerIDList[] = $Inv['customerid'];
		$Units = getCustomerUnits($Inv['customerid']);
		$UnitID = 0;
		foreach($Units AS $UID => $UnitRec)
		{
			$UnitID = $UID;
			$UnitArr[$Inv['customerid']] = $UnitRec;
			$ComplexIDArr[$UnitRec['complexid']] = $UnitRec['complexid'];
		}
	}
	$Complexes = getComplexesByIDList(implode(",", $ComplexIDArr));
	$Customers = getCustomersByIDList(implode(",", $CustomerIDList));
	require_once('PHPExcel.php');
	$FileName = 'IRIS.' . date("Ymd") . '.UnpaidInvoices.xlsx';
	$styleThinBlackBorderOutline = array('borders' => array('outline' => array('style' => PHPExcel_Style_Border::BORDER_THIN, 'color' => array('argb' => 'FF000000'),),),);
	$styleThickBrownBorderOutline = array('borders' => array('outline' => array('style' => PHPExcel_Style_Border::BORDER_THICK,	'color' => array('argb' => 'FF993300'),),),);
	$styleThickBlackBorderOutline = array('borders' => array('outline' => array('style' => PHPExcel_Style_Border::BORDER_THICK,	'color' => array('argb' => 'FF000000'),),),);
	$objPHPExcel = new PHPExcel();
	$objPHPExcel->getProperties()->setCreator("IRIS");
	$objPHPExcel->getProperties()->setLastModifiedBy("IRIS");
	$objPHPExcel->getProperties()->setTitle("Unpaid Invoices");
	$objPHPExcel->getProperties()->setSubject("Unpaid Invoices");
	$objPHPExcel->getProperties()->setDescription("Unpaid Invoices List. Generated by IRIS");
	$objPHPExcel->setActiveSheetIndex(0);
	$objPHPActiveSheet = $objPHPExcel->getActiveSheet();
	$objPHPActiveSheet->setTitle('Unpaid Invoices');
	$objPHPActiveSheet->mergeCells('A1:H1');
	$objPHPActiveSheet->getStyle('A1')->getFont()->setSize(16);
	$objPHPActiveSheet->getStyle('A1')->getFont()->setBold(true);
	$objPHPActiveSheet->setCellValue('A1', 'Unpaid Invoices');
	$ThisRow = 2;
	$objPHPActiveSheet->getStyle('A' . $ThisRow . ':I' . $ThisRow)->getFont()->setSize(10);
	$objPHPActiveSheet->getStyle('A' . $ThisRow . ':I' . $ThisRow)->getFont()->setBold(true);
	$objPHPActiveSheet->getStyle('A' . $ThisRow . ':I' . $ThisRow)->getFill()->setFillType(PHPExcel_Style_Fill::FILL_SOLID);
	$objPHPActiveSheet->getStyle('A' . $ThisRow . ':I' . $ThisRow)->getFill()->getStartColor()->setARGB('FFCCCCCC');
	$objPHPActiveSheet->getStyle('A' . $ThisRow . ':I' . $ThisRow)->getAlignment()->setVertical(PHPExcel_Style_Alignment::VERTICAL_CENTER);
	$objPHPActiveSheet->getStyle('A' . $ThisRow . ':I' . $ThisRow)->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
	$objPHPActiveSheet->getColumnDimension('A')->setWidth('6');
	$objPHPActiveSheet->getColumnDimension('B')->setWidth('15');
	$objPHPActiveSheet->getColumnDimension('C')->setWidth('15');
	$objPHPActiveSheet->getColumnDimension('D')->setWidth('15');
	$objPHPActiveSheet->getColumnDimension('E')->setWidth('30');
	$objPHPActiveSheet->getColumnDimension('F')->setWidth('13');
	$objPHPActiveSheet->getColumnDimension('G')->setWidth('13');
	$objPHPActiveSheet->getColumnDimension('H')->setWidth('18');
	$objPHPActiveSheet->getColumnDimension('I')->setWidth('18');
	$objPHPActiveSheet->getStyle('A' . $ThisRow)->applyFromArray($styleThinBlackBorderOutline);
	$objPHPActiveSheet->getStyle('B' . $ThisRow)->applyFromArray($styleThinBlackBorderOutline);
	$objPHPActiveSheet->getStyle('C' . $ThisRow)->applyFromArray($styleThinBlackBorderOutline);
	$objPHPActiveSheet->getStyle('D' . $ThisRow)->applyFromArray($styleThinBlackBorderOutline);
	$objPHPActiveSheet->getStyle('E' . $ThisRow)->applyFromArray($styleThinBlackBorderOutline);
	$objPHPActiveSheet->getStyle('F' . $ThisRow)->applyFromArray($styleThinBlackBorderOutline);
	$objPHPActiveSheet->getStyle('G' . $ThisRow)->applyFromArray($styleThinBlackBorderOutline);
	$objPHPActiveSheet->getStyle('H' . $ThisRow)->applyFromArray($styleThinBlackBorderOutline);
	$objPHPActiveSheet->getStyle('I' . $ThisRow)->applyFromArray($styleThinBlackBorderOutline);
	$objPHPActiveSheet->setCellValue('A' . $ThisRow, 'Customer ID');
	$objPHPActiveSheet->setCellValue('B' . $ThisRow, 'Customer');
	$objPHPActiveSheet->setCellValue('C' . $ThisRow, 'Customer');
	$objPHPActiveSheet->setCellValue('D' . $ThisRow, 'Unit');
	$objPHPActiveSheet->setCellValue('E' . $ThisRow, 'Balance');
	$objPHPActiveSheet->setCellValue('F' . $ThisRow, 'Invoice Date');
	$objPHPActiveSheet->setCellValue('G' . $ThisRow, 'Non-VAT Total');
	$objPHPActiveSheet->setCellValue('H' . $ThisRow, 'Total (incl. Vat)');
	$objPHPActiveSheet->setCellValue('I' . $ThisRow, 'Outstanding');
	$ThisRow++;
	foreach($Invs AS $InvoiceID => $InvRec)
	{
		$objPHPActiveSheet->setCellValue('A' . $ThisRow, $InvRec['customerid']);
		$objPHPActiveSheet->setCellValue('B' . $ThisRow, $Customers[$InvRec['customerid']]['customername'] . " " . $Customers[$InvRec['customerid']]['customersurname']);
		$objPHPActiveSheet->setCellValue('C' . $ThisRow, $Customers[$InvRec['customerid']]['email1']);
		$objPHPActiveSheet->setCellValue('D' . $ThisRow, $UnitArr[$InvRec['customerid']]['unitnumber'] . " " . $Complexes[$UnitArr[$InvRec['customerid']]['complexid']]['complexname']);
		$objPHPActiveSheet->setCellValue('E' . $ThisRow, $Customers[$InvRec['customerid']]['customerbalance']);
		$objPHPActiveSheet->setCellValue('F' . $ThisRow, substr($InvRec['invoicedate'], 0, 10));
		$objPHPActiveSheet->setCellValue('G' . $ThisRow, $InvRec['nonvattotal']);
		$objPHPActiveSheet->setCellValue('H' . $ThisRow, $InvRec['vattotal']);
		$objPHPActiveSheet->setCellValue('I' . $ThisRow, $InvRec['outstanding']);
		$NonVatTotal += $InvRec['nonvattotal'];
		$VatTotal += $InvRec['vattotal'];
		$ThisRow++;
	}
	$objPHPActiveSheet->setCellValue('F' . $ThisRow, "Totals");
	$objPHPActiveSheet->setCellValue('G' . $ThisRow, $NonVatTotal);
	$objPHPActiveSheet->setCellValue('H' . $ThisRow, $VatTotal);
}
$objPHPExcel->setActiveSheetIndex(0);
// Redirect output to a client’s web browser (Excel2007)
header('Content-Type: application/vnd.openxmlformats-officedocument.spreadsheetml.sheet');
header('Content-Disposition: attachment;filename="' . $FileName . '"');
header('Cache-Control: max-age=0');
// If you're serving to IE 9, then the following may be needed
header('Cache-Control: max-age=1');
// If you're serving to IE over SSL, then the following may be needed
header ('Expires: Mon, 26 Jul 1997 05:00:00 GMT'); // Date in the past
header ('Last-Modified: '.gmdate('D, d M Y H:i:s').' GMT'); // always modified
header ('Cache-Control: cache, must-revalidate'); // HTTP/1.1
header ('Pragma: public'); // HTTP/1.0
$objWriter = PHPExcel_IOFactory::createWriter($objPHPExcel, 'Excel2007');
$objWriter->save('php://output');
$objPHPExcel->disconnectWorksheets(); // Disconnect before you unset to properly clear the memory
unset($objPHPExcel);
unset($objWriter);
?>